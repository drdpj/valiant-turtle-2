TO PUT16 :V
LOCAL "R 0
IF :V > 32767 [MAKE "V 32767]
IF :V < -32767 [MAKE "V -32767]
MAKE "R OSBYTE 138 2 LOBYTE :V
MAKE "R OSBYTE 138 2 HIBYTE :V
END

TO PUT8 :V
LOCAL "R 0
IF :V > 255 [MAKE "V 255]
IF :V < 0 [MAKE "V 0]
MAKE "R OSBYTE 138 2 LOBYTE :V
END

TO SGET24
LOCAL "C 0
LOCAL "L 0
LOCAL "H 0
* FX 2 1
\ Get int8 result and int16 response
MAKE "C RC
MAKE "L RC
MAKE "H RC
* FX 2
MAKE "C ASCII :C
MAKE "L ASCII :L
MAKE "H ASCII :H
\ If C is <0 throw an error
IF :C = 0 [MAKE "H :H * 256 + :L] [PRINT [VT2ERROR] THROW "TOPLEVEL]
OUTPUT :H
END

TO GET16
LOCAL "R -3
CATCH "ESCAPE [MAKE "R SGET24]
* FX 2
OUTPUT :R
END

TO VT2CMD :C :W :X :Y :Z
LOCAL "R 0
* FX 21 1
* FX 21 2
PUT16 :C
PUT16 :W
PUT16 :X
PUT16 :Y
PUT16 :Z
PUT8 13
MAKE "R GET16
OUTPUT :R
END

TO VT2FD :STEPS
LOCAL "R 0
MAKE "R VT2CMD 33 :STEPS 0 0 0
END

TO VT2BK :STEPS
LOCAL "R 0
MAKE "R VT2CMD 34 :STEPS 0 0 0
END

TO VT2LT :DEG
LOCAL "R 0
MAKE "R VT2CMD 35 :DEG 0 0 0
END

TO VT2RT :DEG
LOCAL "R 0
MAKE "R VT2CMD 36 :DEG 0 0 0
END

TO SENSE :ITEM
LOCAL "R -2
IF :ITEM = 1 [MAKE "R VT2CMD 41 0 0 0 0]
IF :ITEM = 2 [MAKE "R VT2CMD 42 0 0 0 0]
IF :ITEM = 3 [MAKE "R VT2CMD 43 0 0 0 0]
IF :ITEM = 4 [MAKE "R VT2CMD 40 0 0 0 0]
OUTPUT :R
END

TO HOOT
ENVELOPE 1 1 -1 1 0 3 20 0 126 -3 0 -30 126 0
SOUND 1 1 25 20
END

TO SCREEN
LOCAL "R 0
\ Motors off, eyes off
MAKE "R VT2CMD 32 0 0 0 0
MAKE "R VT2CMD 39 0 0 0 0
\ Restore primitives
COPYDEF "LEFT "LEFTO
COPYDEF "RIGHT "RIGHTO
COPYDEF "FORWARD "FORWARDO
COPYDEF "BACK "BACKO
COPYDEF "PENUP "PENUPO
COPYDEF "PENDOWN "PENDOWNO
COPYDEF "PENUPQ "PENUPQO
COPYDEF "LT "LEFTO
COPYDEF "RT "RIGHTO
COPYDEF "FD "FORWARDO
COPYDEF "BK "BACKO
COPYDEF "PU "PENUPO
COPYDEF "PD "PENDOWNO
END

TO FLOOR
LOCAL "R 0
\ Set baud rate to 4800
* FX 7 6
* FX 8 6
WAIT 20
* FX 21 1
\ Motors on, pen up, eyes on (Green)
MAKE "R VT2CMD 32 1 0 0 0
MAKE "R VT2CMD 37 1 0 0 0
MAKE "R VT2CMD 39 0 0 255 0
\ Redefine primitives
REDEF
COPYDEF "LEFT "VT2LT
COPYDEF "RIGHT "VT2RT
COPYDEF "FORWARD "VT2FD
COPYDEF "BACK "VT2BK
COPYDEF "PENUP "VT2PU
COPYDEF "PENDOWN "VT2PD
COPYDEF "PENUPQ "VT2PENUPQ
COPYDEF "EXPLORE "FORWARD
\ ...and their aliases
COPYDEF "LT "VT2LT
COPYDEF "RT "VT2RT
COPYDEF "FD "VT2FD
COPYDEF "BK "VT2BK
COPYDEF "PU "VT2PU
COPYDEF "PD "VT2PD
NOREDEF
END

TO EYES :R :G :B
LOCAL "C 0
IF :R > 255 [MAKE "R 255]
IF :G > 255 [MAKE "G 255]
IF :B > 255 [MAKE "B 255]
IF :R < 0 [MAKE "R 0]
IF :G < 0 [MAKE "G 0]
IF :B < 0 [MAKE "B 0]
MAKE "C VT2CMD 39 0 :R :G :B
END

TO VT2PU
LOCAL "R 0
MAKE "R VT2CMD 37 0 0 0 0
END

TO VT2PD
LOCAL "R 0
MAKE "R VT2CMD 38 0 0 0 0
END

TO VT2PENUPQ
LOCAL "R 0
LOCAL "T "FALSE
MAKE "R VT2CMD 40 0 0 0 0
IF :R = 1 [MAKE "T "TRUE]
OUTPUT :T
END

TO LOADINIT
\ GPLv3 (c) 2024 Simon Inns
\ Acornsoft Logo Valiant Turtle 2 Extension
COPYDEF "LEFTO "LEFT
COPYDEF "RIGHTO "RIGHT
COPYDEF "FORWARDO "FORWARD
COPYDEF "BACKO "BACK
COPYDEF "PENUPO "PENUP
COPYDEF "PENDOWNO "PENDOWN
COPYDEF "PENUPQO "PENUPQ
END